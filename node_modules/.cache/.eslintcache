[{"/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/index.js":"1","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/App.jsx":"2","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/UserContext.js":"3","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Register.jsx":"4","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Sidebar.jsx":"5","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Nav.jsx":"6","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Messages.jsx":"7","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Home.jsx":"8","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Posts.jsx":"9"},{"size":488,"mtime":1699479256043,"results":"10","hashOfConfig":"11"},{"size":1287,"mtime":1699479256039,"results":"12","hashOfConfig":"11"},{"size":955,"mtime":1699479256042,"results":"13","hashOfConfig":"11"},{"size":7391,"mtime":1699479256042,"results":"14","hashOfConfig":"11"},{"size":11322,"mtime":1699479256042,"results":"15","hashOfConfig":"11"},{"size":8474,"mtime":1699479256042,"results":"16","hashOfConfig":"11"},{"size":1652,"mtime":1699479256042,"results":"17","hashOfConfig":"11"},{"size":5617,"mtime":1699489632497,"results":"18","hashOfConfig":"11"},{"size":6867,"mtime":1699490612739,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iumz9j",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/index.js",[],[],"/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/App.jsx",[],[],"/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/UserContext.js",[],[],"/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Register.jsx",[],[],"/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Sidebar.jsx",[],[],"/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Nav.jsx",["51","52","53"],[],"import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport Logo from \"../assets/FILO_Logo.png\";\n\nimport UserContext from './UserContext';\n\n\nconst Nav = () => {\n  // const [user, setUser] = useState(null);\n  const [isProfileMenuOpen, setProfileMenuOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const profileMenuRef = useRef(null);\n  const modalRef = useRef(null);\n\n  const { user, dmUsers, channels } = useContext(UserContext);\n\n  const handleMenu = () => {\n    setProfileMenuOpen(false);\n  };\n\n  useEffect(() => {\n    const handleDocumentClick = (e) => {\n      // Close profile menu if click is outside\n      if (\n        profileMenuRef.current &&\n        !profileMenuRef.current.contains(e.target)\n      ) {\n        setProfileMenuOpen(false);\n      }\n      // Close modal if click is outside\n      if (\n        isModalOpen &&\n        modalRef.current &&\n        !modalRef.current.contains(e.target)\n      ) {\n        setIsModalOpen(false);\n      }\n    };\n\n    // Add event listener when the component is mounted\n    document.addEventListener(\"mousedown\", handleDocumentClick);\n\n    // Cleanup the event listener when the component is unmounted\n    return () => {\n      document.removeEventListener(\"mousedown\", handleDocumentClick);\n    };\n  }, [isModalOpen]);\n\n  const handleProfileIconClick = () => {\n    setProfileMenuOpen(!isProfileMenuOpen);\n  };\n\n  const handleProfileClick = () => {\n    setIsModalOpen(true);\n    setProfileMenuOpen(false); // Close dropdown menu\n  };\n\n  return (\n    // TODO: Implement search bar\n    <header>\n      <nav className=\"nav_bg flex justify-between items-center w-full z-10 py-2 px-8 shadow-lg\">\n        <a href=\"/\">\n          {/* <img src={Logo} alt=\"logo\" width={35} height={25} /> */}\n        </a>\n        <div className=\"flex gap-6 px-4\">\n          <h1 className=\"text-sand text-2xl font-bold\">\n            {user ? user.username : \"Loading...\"}\n          </h1>\n          <div ref={profileMenuRef}>\n            {user && user.profile_image && (\n              <img\n                src={require(`../assets/${user.profile_image}`)}\n                alt=\"profile\"\n                width={35}\n                height={35}\n                onClick={handleProfileIconClick}\n                className=\"cursor-pointer rounded-full\"\n              />\n            )}\n            {isProfileMenuOpen && (\n              <div className=\"absolute top-16 right-6 bg-primaryBlue text-sand shadow-md p-2 border-2 border-sand rounded-md\">\n                <ul className=\"text-center\">\n                  <li\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\n                    onClick={handleProfileClick}\n                  >\n                    Profile\n                  </li>\n                  <li\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\n                    onClick={handleMenu}\n                  >\n                    Settings\n                  </li>\n                  <li\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\n                    onClick={handleMenu}\n                  >\n                    Logout\n                  </li>\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n      {isModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40 flex justify-center items-center \">\n          <div\n            ref={modalRef}\n            className=\"nav_bg p-4 rounded text-white \"\n            style={{ minHeight: \"50vh\", minWidth: \"80vw\" }}\n          >\n            <h2 className=\"text-amber-500 pb-10 text-center text-3xl\t\">\n              User Profile\n            </h2>\n            <div className=\"flex flex-wrap\">\n              <div className=\"flex flex-col items-center w-1/2 border-r\">\n                {/* Image Container */}\n                <div className=\"w-full flex justify-center p-10\">\n                  <div className=\"relative\">\n                    {user && user.profile_image && (\n                      <img\n                        src={require(`../assets/${user.profile_image}`)}\n                        alt=\"profile\"\n                        className=\"w-52 h-auto cursor-pointer rounded-full\"\n                      />\n                    )}\n                    {/* Upload Icon Overlay */}\n                    <input\n                      type=\"file\"\n                      id=\"profile-upload\"\n                      className=\"hidden\"\n                      // onChange={} // A function to handle the file upload\n                    />\n                    {/* Upload Icon Overlay */}\n                    <label\n                      htmlFor=\"profile-upload\"\n                      className=\"absolute bottom-2 right-3 bg-blue-300 text-white rounded-full \n                            flex items-center justify-center w-10 h-10 cursor-pointer\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        className=\"w-6 h-6\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M12 4v16m8-8H4\"\n                        />\n                      </svg>\n                    </label>\n                  </div>\n                </div>\n\n                {/* Information Container */}\n                <div className=\"w-full flex justify-between px-2 text-2xl pb-10\">\n                  <div className=\"flex-1 flex justify-center items-center border-r\">\n                    <div className=\"text-center\">\n                      <div className=\"font-semibold\">Following</div>\n                      <div>\n                        {user && Array.isArray(user.following)\n                          ? user.following.length\n                          : \"Loading...\"}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Followers Column */}\n                  <div className=\"flex-1 flex justify-center items-center\">\n                    <div className=\"text-center\">\n                      <div className=\"font-semibold\">Followers</div>\n                      <div>\n                        {user && Array.isArray(user.followers)\n                          ? user.followers.length\n                          : \"Loading...\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"w-1/2 pl-2 \">\n                <div className=\"p-10\">\n                  <div className=\"user-info-field flex flex-col mb-4\">\n                    <label className=\"mb-1 text-sm font-semibold\">Email</label>\n                    <input\n                      className=\"border-0 border-b-2 border-gray-300   text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\n                      type=\"text\"\n                      value={user ? user.email : \"Loading...\"}\n                      readOnly\n                    />\n                  </div>\n\n                  <div className=\"user-info-field flex flex-col mb-4\">\n                    <label className=\"mb-1 text-sm font-semibold\">\n                      Username\n                    </label>\n                    <input\n                      className=\"border-0 border-b-2 border-gray-300  text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\n                      type=\"text\"\n                      value={user ? user.username : \"Loading...\"}\n                      readOnly\n                    />\n                  </div>\n\n                  <div className=\"user-info-field flex flex-col mb-4\">\n                    <label className=\"mb-1 text-sm font-semibold\">\n                      Password\n                    </label>\n                    <input\n                      className=\"border-0 border-b-2 border-gray-300 text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\n                      type=\"password\"\n                      value={\"****************\"}\n                      readOnly\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default Nav;\n","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Messages.jsx",["54","55","56","57","58"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport SendIcon from \"../assets/sendIcon.svg\";\n\nimport UserContext from \"./UserContext\";\n\nfunction Messages() {\n  const { user, dmUsers, channels } = useContext(UserContext);\n\n  // how do I get the data from the user (_id) database? useEffect?\n\n  // TODO: Make Messaging page Like the Figma, Should fetch the messages and information from the backend\n  // For DMS use /get-dm and send the DM ID  will give oyu all the User Info\n  // MORE IMPORTANT LO2: For Channels should use /get-Channel  Send the Channel ID they clicked to backend.\n  // using webSockets should countdown\n  return (\n    <div className=\"home_bg min-h-screen ml-16\">\n      {/* 1) the code below is for displaying the chat's icon and chat name */}\n      <div className=\"flex items-center pt-2 pl-6 pb-2 border-b-[1px]\">\n        <div className=\"h-11 w-11 rounded-full bg-white mr-1\"></div>\n        <div className=\"mx-4 font-semibold text-goldenOrange text-xl\">\n          Username\n        </div>\n      </div>\n      <div className=\"fixed bottom-0 pb-6 w-full\" style={{ left: '2rem', right: '1rem' }}> \n    <form className=\"flex bg-white h-8 rounded-2xl justify-center items-center mx-auto\" style={{ maxWidth: 'calc(100% - 10rem)' }}>\n      <input className=\"ml-5 flex-grow border-none rounded-l-2xl px-4\" placeholder=\"Type a message...\"></input>\n      <button\n        type=\"submit\"\n        className=\"bg-blue hover:scale-150 text-white font-semibold mx-4 rounded-r-2xl\"\n      >\n        <img src={SendIcon} alt=\"send\" width={20} height={20} />\n      </button>\n    </form>\n  </div>\n    </div>\n  );\n}\n\nexport default Messages;\n","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Home.jsx",["59"],[],"import React, { useRef, useEffect, useState } from \"react\";\nimport Posts from \"./Posts\";\nimport SendIcon from \"../assets/sendIcon.svg\";\nimport { LuImagePlus } from \"react-icons/lu\";\nimport { MdCancel } from \"react-icons/md\"; \n\n\nconst Home = () => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [showDescription, setShowDescription] = useState(false);\n  const [imageBase64, setImageBase64] = useState('');\n  const [formData, setFormData] = useState({\n    new_title: \"\",\n    new_description: \"\",\n  });\n  const formRef = useRef();\n  const removeImage = () => {\n    setImageBase64('');\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (formRef.current && !formRef.current.contains(event.target)) {\n        setShowDescription(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [formRef]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setImageBase64(e.target.result);\n      };\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  const handleNewPost = async (event) => {\n    event.preventDefault();\n\n    const dataToSend = {\n      title: formData.new_title,\n      description: formData.new_description,\n      image: imageBase64, // add the image base64 to the data to send\n    };\n\n    try {\n      console.log(\"dataToSend: \", dataToSend);\n      const response = await fetch(\"/posts-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(dataToSend),\n      });\n\n      if (response.ok) {\n        window.location.href = \"/\";\n      } else {\n        // handle error\n      }\n    } catch (error) {\n      window.location.href = \"/\";\n      console.error(\"Error:\", error);\n    }\n  };\n  // TODO: Update Posts to load images look at the way profile images are uploaded should be similar\n\n  return (\n    <div className=\"home_bg min-h-screen h-full ml-16\">\n      <div className=\"flex justify-center items-center text-3xl text-white pt-2\">\n        <a\n          href=\"/\"\n          className=\"px-4 text-base hover:underline underline-offset-8\"\n        >\n          Home\n        </a>\n        |\n        <a\n          href=\"/\"\n          className=\"px-4 text-base hover:underline underline-offset-8\"\n        >\n          Following\n        </a>\n      </div>\n\n      <div\n        className=\"max-w-5xl mx-auto p-4 my-8 bg-primaryDark shadow-md rounded-md text-sand\"\n        ref={formRef}\n      >\n        <h1 className=\"text-base font-semibold mb-2 text-center\">New Post</h1>\n        <form onSubmit={handleNewPost}>\n          <input\n            name=\"new_title\"\n            className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full\"\n            placeholder=\"What's On Your Mind?\"\n            value={formData.new_title}\n            onFocus={() => {\n              setIsFocused(true);\n              setShowDescription(true);\n            }}\n            onBlur={() => setIsFocused(false)}\n            onChange={handleInputChange}\n          />\n          <hr />\n          {showDescription && (\n            <div className=\"mt-2\">\n              <textarea\n                name=\"new_description\"\n                className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full h-20 resize-none overflow-auto\"\n                placeholder=\"Description\"\n                value={formData.new_description}\n                onFocus={() => {\n                  setIsFocused(true);\n                  setShowDescription(true);\n                }}\n                onChange={handleInputChange}\n              />\n              <hr className=\"p-2\" />\n\n              <div className=\"flex justify-end items-center\">\n              <label className=\"cursor-pointer\">\n              <LuImagePlus \n                className=\"w-7 h-7 inline-block text-white mr-2 hover:scale-125\"\n              />\n              <input\n                type=\"file\"\n                className=\"hidden\"\n                onChange={handleImageChange}\n                accept=\"image/*\"\n              />\n            </label>\n            {imageBase64 && (\n              <div className=\"relative w-full flex justify-center\">\n              <div className=\"relative\" style={{ height: '100px' }}>\n                {/* The image itself */}\n                <img src={imageBase64} alt=\"Preview\" style={{ height: '100px' }} className=\"object-contain\" />\n                {/* The button to remove the image */}\n                <button\n                  type=\"button\"\n                  className=\"absolute top-0 right-0 bg-red-500 text-white rounded-full p-1\"\n                  onClick={removeImage}\n                  style={{ transform: 'translate(50%, -50%)' }} // Adjust position to be on the edge\n                >\n                  <MdCancel />\n                </button>\n              </div>\n            </div>\n            )}\n            <button\n              type=\"submit\"\n              className=\"bg-none hover:scale-125 text-white font-semibold mx-4 rounded-md justify-between\"\n            >\n              <img src={SendIcon} alt=\"send\" width={20} height={20} />\n            </button>\n\n              </div>\n            </div>\n          )}\n        </form>\n      </div>\n\n      <Posts />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/doniyorisamtilloev/Documents/CSE 312/FILO/src/components/Posts.jsx",["60","61","62"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport heartIcon from \"../assets/heart-regular.svg\";\nimport redHeart from \"../assets/redHeart.svg\";\n\nimport UserContext from './UserContext';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const { user, setUser } = useContext(UserContext);\n\n  const [clicked, setClicked] = useState([]);\n  const [formData, setFormData] = useState({\n    like_counts: \"\",\n  });\n  const { like_counts } = formData;\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleLikes = async (postId, index) => {\n    const dataToSend = { postId, userId: user.username };\n\n    try {\n      await fetch(\"/post-like\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(dataToSend),\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  function handleClick(postId, index) {\n    const updatedPosts = [...posts];\n    const post = updatedPosts[index];\n\n    if (post.likers.includes(user.username)) {\n      // If the post is already liked, unlike it\n      const likerIndex = post.likers.indexOf(user.username);\n      post.likers.splice(likerIndex, 1);\n      post.like_counter--;\n    } else {\n      // If the post is not yet liked, like it\n      post.likers.push(user.username);\n      post.like_counter++;\n    }\n\n    setPosts(updatedPosts);\n    handleLikes(postId, index); // This will now just update the like status in the backend\n  }\n\n  useEffect(() => {\n    const fetchPosts = () => {\n      fetch(\"/get-posts\")\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\n              \"Network response was not ok \" + response.statusText\n            );\n          }\n          return response.json();\n        })\n        .then((data) => {\n          setPosts(data.reverse());\n          console.log(data);\n          setClicked(new Array(data.length).fill(false));\n        })\n        .catch((error) => {\n          console.error(\n            \"There has been a problem with your fetch operation:\",\n            error\n          );\n          setError(error.toString());\n        });\n    };\n\n    fetchPosts();\n\n    const intervalId = setInterval(fetchPosts, 5000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const isFollowing = (username) => {\n    return user.following.includes(username);\n  };\n\n  // The function to handle the follow action\n  const handleFollow = async (usernameToFollow) => {\n    // Optimistically update the local state\n    const isNowFollowing = isFollowing(usernameToFollow);\n    const updatedFollowing = isNowFollowing\n      ? user.following.filter(username => username !== usernameToFollow) // Remove the user from the following array\n      : [...user.following, usernameToFollow]; // Add the user to the following array\n  \n    setUser({\n      ...user,\n      following: updatedFollowing\n    });\n  \n    try {\n      // Perform the backend update\n      const response = await fetch(\"/follow-user\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          followers: user.username,\n          following: usernameToFollow,\n        }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n  \n      // No need to update the state here, as we've already done it optimistically\n  \n    } catch (error) {\n      // If the backend update fails, revert the state change\n      console.error(\"There has been a problem with your follow operation:\", error);\n      setUser(prevUser => ({\n        ...prevUser,\n        // Revert to the previous following list\n        following: isNowFollowing ? [...prevUser.following, usernameToFollow] : prevUser.following.filter(username => username !== usernameToFollow),\n      }));\n    }\n  };\n\n  return (\n    <div className=\"justify-center\">\n      {error ? (\n        <p className=\"text-red-500 text-xl\">Error: {error}</p>\n      ) : posts.length === 0 ? (\n        <div className=\"flex justify-center items-center\">\n          <p className=\"text-sand text-4xl text-center\">No posts available!</p>\n        </div>\n      ) : (\n        posts.map((post, index) => (\n          <div\n            key={index}\n            className=\"max-w-5xl mx-auto my-1 p-3 bg-post rounded-xl text-white\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                {user && user.profile_image && (\n                  <img\n                    src={require(`../assets/${user.profile_image}`)}\n                    alt=\"profile\"\n                    className=\"w-10 h-10 rounded-full\"\n                  />\n                )}\n                <h2 className=\"text-xl\">{post.username}</h2>\n              </div>\n              {/* If post is yourself show Follow or following*/}\n              {user && user.username !== post.username && (\n                <button\n                  onClick={() => handleFollow(post.username)}\n                  className=\"text-blue-300 text-md px-3 cursor-pointer hover:scale-110\"\n                >\n                  {isFollowing(post.username) ? \"Following\" : \"Follow\"}\n                </button>\n              )}\n            </div>\n\n            <hr className=\"my-4\" />\n            <h1 className=\"text-2xl text-sand font-bold\">{post.title}</h1>\n            <hr className=\"my-4\" />\n            {post.description && (\n              <div>\n                <p className=\"text-sand\">{post.description}</p>\n                <hr className=\"my-2\" />\n              </div>\n            )}\n\n            {post.image_path && (\n              <div>\n                 <img\n                    src={require(`../post-image/${post.image_path}`)}\n                    alt=\"profile\"\n                    className=\"h-32\"\n                  />\n                <hr className=\"my-2\" />\n              </div>\n            )}\n\n            <div className=\"mt-2 w-5 h-5 flex items-center space-x-2\">\n              {user && post.likers.includes(user.username) ? (\n                <img\n                  src={redHeart}\n                  onClick={() => handleClick(post._id, index)}\n                  alt=\"Liked\"\n                  className=\"hover:scale-110\"\n                />\n              ) : (\n                <img\n                  src={heartIcon}\n                  onClick={() => handleClick(post._id, index)}\n                  alt=\"Like\"\n                  className=\"hover:scale-110\"\n                />\n              )}\n              <span className=\"text-white\">{post.like_counter}</span>{\" \"}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n",{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":12},{"ruleId":"63","severity":1,"message":"67","line":15,"column":17,"nodeType":"65","messageId":"66","endLine":15,"endColumn":24},{"ruleId":"63","severity":1,"message":"68","line":15,"column":26,"nodeType":"65","messageId":"66","endLine":15,"endColumn":34},{"ruleId":"63","severity":1,"message":"69","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"70","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"71","line":7,"column":11,"nodeType":"65","messageId":"66","endLine":7,"endColumn":15},{"ruleId":"63","severity":1,"message":"67","line":7,"column":17,"nodeType":"65","messageId":"66","endLine":7,"endColumn":24},{"ruleId":"63","severity":1,"message":"68","line":7,"column":26,"nodeType":"65","messageId":"66","endLine":7,"endColumn":34},{"ruleId":"63","severity":1,"message":"72","line":9,"column":10,"nodeType":"65","messageId":"66","endLine":9,"endColumn":19},{"ruleId":"63","severity":1,"message":"73","line":12,"column":10,"nodeType":"65","messageId":"66","endLine":12,"endColumn":17},{"ruleId":"63","severity":1,"message":"74","line":16,"column":11,"nodeType":"65","messageId":"66","endLine":16,"endColumn":22},{"ruleId":"63","severity":1,"message":"75","line":17,"column":9,"nodeType":"65","messageId":"66","endLine":17,"endColumn":21},"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'dmUsers' is assigned a value but never used.","'channels' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'isFocused' is assigned a value but never used.","'clicked' is assigned a value but never used.","'like_counts' is assigned a value but never used.","'handleChange' is assigned a value but never used."]