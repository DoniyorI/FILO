[{"C:\\Users\\zodin\\CSE312\\FILO\\src\\index.js":"1","C:\\Users\\zodin\\CSE312\\FILO\\src\\App.jsx":"2","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Register.jsx":"3","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Nav.jsx":"4","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Home.jsx":"5","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Sidebar.jsx":"6","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Posts.jsx":"7"},{"size":509,"mtime":1698007985288,"results":"8","hashOfConfig":"9"},{"size":1162,"mtime":1699391102464,"results":"10","hashOfConfig":"9"},{"size":7653,"mtime":1698174432103,"results":"11","hashOfConfig":"9"},{"size":9642,"mtime":1699411355876,"results":"12","hashOfConfig":"9"},{"size":4564,"mtime":1699411355873,"results":"13","hashOfConfig":"9"},{"size":11901,"mtime":1699411355881,"results":"14","hashOfConfig":"9"},{"size":6727,"mtime":1699415437498,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uvlnsa",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\zodin\\CSE312\\FILO\\src\\index.js",[],[],"C:\\Users\\zodin\\CSE312\\FILO\\src\\App.jsx",["40","41"],[],"import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\n// import BarLoader from \"react-spinners/BarLoader\";\r\n\r\nimport Register from \"./components/Register\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Navbar from \"./components/Nav\";\r\nimport Home from \"./components/Home\";\r\nimport \"./index.css\";\r\n\r\nexport default function App() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [registerLoading, setRegisterLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setRegisterLoading(false);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <>\r\n              <Sidebar />\r\n              <Navbar />\r\n              <Home />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"login\"\r\n          element={\r\n            <>\r\n              <Register />\r\n            </>\r\n          }\r\n        />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Register.jsx",[],[],"C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Nav.jsx",["42"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Logo from \"../assets/FILO_Logo.png\";\r\nimport DefaultProfileImage from \"../assets/mainProfile.svg\"; // The default profile image\r\n\r\nconst Nav = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [isProfileMenuOpen, setProfileMenuOpen] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const profileMenuRef = useRef(null);\r\n  const modalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/get-user\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok \" + response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((userData) => {\r\n        console.log(userData.profile_path);\r\n        setUser(userData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\r\n          \"There has been a problem with your fetch operation:\",\r\n          error\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   document.addEventListener(\"click\", handleDocumentClick);\r\n  //   return () => {\r\n  //     document.removeEventListener(\"click\", handleDocumentClick);\r\n  //   };\r\n  // }, []);\r\n\r\n  // const handleDocumentClick = (e) => {\r\n  //   // Check if the click occurred outside the profile menu\r\n  //   if (profileMenuRef.current && !profileMenuRef.current.contains(e.target)) {\r\n  //     setProfileMenuOpen(false);\r\n  //   }\r\n  // };\r\n\r\n  const handleMenu = () => {\r\n    setProfileMenuOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleDocumentClick = (e) => {\r\n      // Close profile menu if click is outside\r\n      if (\r\n        profileMenuRef.current &&\r\n        !profileMenuRef.current.contains(e.target)\r\n      ) {\r\n        setProfileMenuOpen(false);\r\n      }\r\n      // Close modal if click is outside\r\n      if (\r\n        isModalOpen &&\r\n        modalRef.current &&\r\n        !modalRef.current.contains(e.target)\r\n      ) {\r\n        setIsModalOpen(false);\r\n      }\r\n    };\r\n\r\n    // Add event listener when the component is mounted\r\n    document.addEventListener(\"mousedown\", handleDocumentClick);\r\n\r\n    // Cleanup the event listener when the component is unmounted\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleDocumentClick);\r\n    };\r\n  }, [isModalOpen]);\r\n\r\n  const handleProfileIconClick = () => {\r\n    setProfileMenuOpen(!isProfileMenuOpen);\r\n  };\r\n\r\n  const handleProfileClick = () => {\r\n    setIsModalOpen(true);\r\n    setProfileMenuOpen(false); // Close dropdown menu\r\n  };\r\n\r\n  return (\r\n    // TODO: Implement search bar\r\n    <header>\r\n      <nav className=\"nav_bg flex justify-between items-center w-full z-10 py-4 px-10 shadow-lg\">\r\n        <a href=\"/\">\r\n          <img src={Logo} alt=\"logo\" width={35} height={25} />\r\n        </a>\r\n        <div className=\"flex gap-6 px-4\">\r\n          <h1 className=\"text-sand text-2xl font-bold\">\r\n            {user ? user.username : \"Loading...\"}\r\n          </h1>\r\n          <div ref={profileMenuRef}>\r\n            {user && user.profile_image && (\r\n              <img\r\n                src={require(`../assets/${user.profile_image}`)}\r\n                alt=\"profile\"\r\n                width={35}\r\n                height={35}\r\n                onClick={handleProfileIconClick}\r\n                className=\"cursor-pointer rounded-full\"\r\n              />\r\n            )}\r\n            {isProfileMenuOpen && (\r\n              <div className=\"absolute top-16 right-6 bg-primaryBlue text-sand shadow-md p-2 border-2 border-sand rounded-md\">\r\n                <ul className=\"text-center\">\r\n                  <li\r\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\r\n                    onClick={handleProfileClick}\r\n                  >\r\n                    Profile\r\n                  </li>\r\n                  <li\r\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\r\n                    onClick={handleMenu}\r\n                  >\r\n                    Settings\r\n                  </li>\r\n                  <li\r\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\r\n                    onClick={handleMenu}\r\n                  >\r\n                    Logout\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40 flex justify-center items-center \">\r\n          <div\r\n            ref={modalRef}\r\n            className=\"nav_bg p-4 rounded text-white \"\r\n            style={{ minHeight: \"40vh\", minWidth: \"80vh\" }}\r\n          >\r\n            <h2 className=\"text-amber-500 pb-10 text-center text-3xl\t\">\r\n              User Profile\r\n            </h2>\r\n            <div className=\"flex flex-wrap\">\r\n              <div className=\"flex flex-col items-center w-1/2 border-r\">\r\n                {/* Image Container */}\r\n                <div className=\"w-full flex justify-center p-10\">\r\n                  <div className=\"relative\">\r\n                    {user && user.profile_image && (\r\n                      <img\r\n                        src={require(`../assets/${user.profile_image}`)}\r\n                        alt=\"profile\"\r\n                        className=\"w-52 h-auto cursor-pointer rounded-full\"\r\n                      />\r\n                    )}\r\n                    {/* Upload Icon Overlay */}\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"profile-upload\"\r\n                      className=\"hidden\"\r\n                      // onChange={} // A function to handle the file upload\r\n                    />\r\n                    {/* Upload Icon Overlay */}\r\n                    <label\r\n                      htmlFor=\"profile-upload\"\r\n                      className=\"absolute bottom-2 right-3 bg-blue-300 text-white rounded-full \r\n                            flex items-center justify-center w-10 h-10 cursor-pointer\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                        className=\"w-6 h-6\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M12 4v16m8-8H4\"\r\n                        />\r\n                      </svg>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Information Container */}\r\n                <div className=\"w-full flex justify-between px-2 text-2xl pb-10\">\r\n                  <div className=\"flex-1 flex justify-center items-center border-r\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"font-semibold\">Following</div>\r\n                      <div>\r\n                        {user && Array.isArray(user.following)\r\n                          ? user.following.length\r\n                          : \"Loading...\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Followers Column */}\r\n                  <div className=\"flex-1 flex justify-center items-center\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"font-semibold\">Followers</div>\r\n                      <div>\r\n                        {user && Array.isArray(user.followers)\r\n                          ? user.followers.length\r\n                          : \"Loading...\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"w-1/2 pl-2 \">\r\n                <div className=\"p-10\">\r\n                  <div className=\"user-info-field flex flex-col mb-4\">\r\n                    <label className=\"mb-1 text-sm font-semibold\">Email</label>\r\n                    <input\r\n                      className=\"border-0 border-b-2 border-gray-300   text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\r\n                      type=\"text\"\r\n                      value={user ? user.email : \"Loading...\"}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"user-info-field flex flex-col mb-4\">\r\n                    <label className=\"mb-1 text-sm font-semibold\">\r\n                      Username\r\n                    </label>\r\n                    <input\r\n                      className=\"border-0 border-b-2 border-gray-300  text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\r\n                      type=\"text\"\r\n                      value={user ? user.username : \"Loading...\"}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"user-info-field flex flex-col mb-4\">\r\n                    <label className=\"mb-1 text-sm font-semibold\">\r\n                      Password\r\n                    </label>\r\n                    <input\r\n                      className=\"border-0 border-b-2 border-gray-300 text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\r\n                      type=\"password\"\r\n                      value={\"****************\"}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Home.jsx",["43"],[],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport Posts from \"./Posts\";\r\nimport SendIcon from \"../assets/sendIcon.svg\";\r\nimport { LuImagePlus } from \"react-icons/lu\";\r\n\r\nconst Home = () => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    new_title: \"\",\r\n    new_description: \"\",\r\n  });\r\n  const formRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (formRef.current && !formRef.current.contains(event.target)) {\r\n        setShowDescription(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [formRef]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleNewPost = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const dataToSend = {\r\n      title: formData.new_title,\r\n      description: formData.new_description,\r\n    };\r\n\r\n    try {\r\n      console.log(\"dataToSend: \");\r\n      console.log(dataToSend);\r\n      const response = await fetch(\"/posts-upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n\r\n      if (response.ok) {\r\n        window.location.href = \"/\";\r\n      } else {\r\n        // handle error\r\n      }\r\n    } catch (error) {\r\n      window.location.href = \"/\";\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n  // TODO: Update Posts to load images look at the way profile images are uploaded should be similar\r\n\r\n  return (\r\n    <div className=\"home_bg min-h-screen h-full ml-20\">\r\n      <div className=\"flex justify-center items-center text-3xl text-white pt-2\">\r\n        <a\r\n          href=\"/\"\r\n          className=\"px-4 text-base hover:underline underline-offset-8\"\r\n        >\r\n          Home\r\n        </a>\r\n        |\r\n        <a\r\n          href=\"/\"\r\n          className=\"px-4 text-base hover:underline underline-offset-8\"\r\n        >\r\n          Following\r\n        </a>\r\n      </div>\r\n\r\n      <div\r\n        className=\"max-w-5xl mx-auto p-4 my-8 bg-primaryDark shadow-md rounded-md text-sand\"\r\n        ref={formRef}\r\n      >\r\n        <h1 className=\"text-base font-semibold mb-2 text-center\">New Post</h1>\r\n        <form onSubmit={handleNewPost}>\r\n          <input\r\n            name=\"new_title\"\r\n            className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full\"\r\n            placeholder=\"What's On Your Mind?\"\r\n            value={formData.new_title}\r\n            onFocus={() => {\r\n              setIsFocused(true);\r\n              setShowDescription(true);\r\n            }}\r\n            onBlur={() => setIsFocused(false)}\r\n            onChange={handleInputChange}\r\n          />\r\n          <hr />\r\n          {showDescription && (\r\n            <div className=\"mt-2\">\r\n              <textarea\r\n                name=\"new_description\"\r\n                className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full h-20 resize-none overflow-auto\"\r\n                placeholder=\"Description\"\r\n                value={formData.new_description}\r\n                onFocus={() => {\r\n                  setIsFocused(true);\r\n                  setShowDescription(true);\r\n                }}\r\n                onChange={handleInputChange}\r\n              />\r\n              <hr className=\"p-2\" />\r\n\r\n              <div className=\"flex justify-end items-center\">\r\n                <label className=\"cursor-pointer\">\r\n                  <LuImagePlus \r\n                  className=\"w-5 h-5 inline-block text-white mr-2 hover:scale-150\"\r\n                  />\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"hidden\"\r\n                    // onChange={handleFileChange}\r\n                    accept=\"image/*\"\r\n                  />\r\n                </label>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"bg-none hover:scale-150 text-white font-semibold mx-4 rounded-md justify-between\"\r\n                >\r\n                  <img src={SendIcon} alt=\"send\" width={20} height={20} />\r\n                </button>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n\r\n      <Posts />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Sidebar.jsx",[],[],"C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Posts.jsx",["44","45","46","47"],[],{"ruleId":"48","severity":1,"message":"49","line":12,"column":10,"nodeType":"50","messageId":"51","endLine":12,"endColumn":17},{"ruleId":"48","severity":1,"message":"52","line":13,"column":10,"nodeType":"50","messageId":"51","endLine":13,"endColumn":25},{"ruleId":"48","severity":1,"message":"53","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":27},{"ruleId":"48","severity":1,"message":"54","line":7,"column":10,"nodeType":"50","messageId":"51","endLine":7,"endColumn":19},{"ruleId":"48","severity":1,"message":"55","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":15},{"ruleId":"48","severity":1,"message":"56","line":34,"column":10,"nodeType":"50","messageId":"51","endLine":34,"endColumn":17},{"ruleId":"48","severity":1,"message":"57","line":38,"column":11,"nodeType":"50","messageId":"51","endLine":38,"endColumn":22},{"ruleId":"48","severity":1,"message":"58","line":39,"column":9,"nodeType":"50","messageId":"51","endLine":39,"endColumn":21},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'registerLoading' is assigned a value but never used.","'DefaultProfileImage' is defined but never used.","'isFocused' is assigned a value but never used.","'Profile' is defined but never used.","'clicked' is assigned a value but never used.","'like_counts' is assigned a value but never used.","'handleChange' is assigned a value but never used."]