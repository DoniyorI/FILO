[{"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/index.js":"1","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/App.jsx":"2","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/UserContext.js":"3","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Messages.jsx":"4","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Home.jsx":"5","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Register.jsx":"6","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Nav.jsx":"7","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Sidebar.jsx":"8","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Posts.jsx":"9","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/SidebarMsg.jsx":"10"},{"size":488,"mtime":1699397062576,"results":"11","hashOfConfig":"12"},{"size":1470,"mtime":1699511309169,"results":"13","hashOfConfig":"12"},{"size":955,"mtime":1699475168084,"results":"14","hashOfConfig":"12"},{"size":5974,"mtime":1699516784183,"results":"15","hashOfConfig":"12"},{"size":4418,"mtime":1699475168083,"results":"16","hashOfConfig":"12"},{"size":7391,"mtime":1699397062575,"results":"17","hashOfConfig":"12"},{"size":8474,"mtime":1699482901399,"results":"18","hashOfConfig":"12"},{"size":11322,"mtime":1699482904879,"results":"19","hashOfConfig":"12"},{"size":6552,"mtime":1699475168084,"results":"20","hashOfConfig":"12"},{"size":864,"mtime":1699511431891,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4zm8qb",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/index.js",[],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/App.jsx",["56","57","58"],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/UserContext.js",[],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Messages.jsx",["59","60","61","62","63","64","65","66","67"],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Home.jsx",["68"],[],"import React, { useRef, useEffect, useState } from \"react\";\nimport Posts from \"./Posts\";\nimport SendIcon from \"../assets/sendIcon.svg\";\nimport { LuImagePlus } from \"react-icons/lu\";\n\nconst Home = () => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [showDescription, setShowDescription] = useState(false);\n  const [formData, setFormData] = useState({\n    new_title: \"\",\n    new_description: \"\",\n  });\n  const formRef = useRef();\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (formRef.current && !formRef.current.contains(event.target)) {\n        setShowDescription(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [formRef]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleNewPost = async (event) => {\n    event.preventDefault();\n\n    const dataToSend = {\n      title: formData.new_title,\n      description: formData.new_description,\n    };\n\n    try {\n      console.log(\"dataToSend: \");\n      console.log(dataToSend);\n      const response = await fetch(\"/posts-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(dataToSend),\n      });\n\n      if (response.ok) {\n        window.location.href = \"/\";\n      } else {\n        // handle error\n      }\n    } catch (error) {\n      window.location.href = \"/\";\n      console.error(\"Error:\", error);\n    }\n  };\n  // TODO: Update Posts to load images look at the way profile images are uploaded should be similar\n\n  return (\n    <div className=\"home_bg min-h-screen h-full ml-16\">\n      <div className=\"flex justify-center items-center text-3xl text-white pt-2\">\n        <a\n          href=\"/\"\n          className=\"px-4 text-base hover:underline underline-offset-8\"\n        >\n          Home\n        </a>\n        |\n        <a\n          href=\"/\"\n          className=\"px-4 text-base hover:underline underline-offset-8\"\n        >\n          Following\n        </a>\n      </div>\n\n      <div\n        className=\"max-w-5xl mx-auto p-4 my-8 bg-primaryDark shadow-md rounded-md text-sand\"\n        ref={formRef}\n      >\n        <h1 className=\"text-base font-semibold mb-2 text-center\">New Post</h1>\n        <form onSubmit={handleNewPost}>\n          <input\n            name=\"new_title\"\n            className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full\"\n            placeholder=\"What's On Your Mind?\"\n            value={formData.new_title}\n            onFocus={() => {\n              setIsFocused(true);\n              setShowDescription(true);\n            }}\n            onBlur={() => setIsFocused(false)}\n            onChange={handleInputChange}\n          />\n          <hr />\n          {showDescription && (\n            <div className=\"mt-2\">\n              <textarea\n                name=\"new_description\"\n                className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full h-20 resize-none overflow-auto\"\n                placeholder=\"Description\"\n                value={formData.new_description}\n                onFocus={() => {\n                  setIsFocused(true);\n                  setShowDescription(true);\n                }}\n                onChange={handleInputChange}\n              />\n              <hr className=\"p-2\" />\n\n              <div className=\"flex justify-end items-center\">\n                <label className=\"cursor-pointer\">\n                  <LuImagePlus \n                  className=\"w-7 h-7 inline-block text-white mr-2 hover:scale-125\"\n                  />\n                  <input\n                    type=\"file\"\n                    className=\"hidden\"\n                    // onChange={handleFileChange}\n                    accept=\"image/*\"\n                  />\n                </label>\n                <button\n                  type=\"submit\"\n                  className=\"bg-none hover:scale-125 text-white font-semibold mx-4 rounded-md justify-between\"\n                >\n                  <img src={SendIcon} alt=\"send\" width={20} height={20} />\n                </button>\n\n              </div>\n            </div>\n          )}\n        </form>\n      </div>\n\n      <Posts />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Register.jsx",[],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Nav.jsx",["69","70","71"],[],"import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport Logo from \"../assets/FILO_Logo.png\";\n\nimport UserContext from './UserContext';\n\n\nconst Nav = () => {\n  // const [user, setUser] = useState(null);\n  const [isProfileMenuOpen, setProfileMenuOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const profileMenuRef = useRef(null);\n  const modalRef = useRef(null);\n\n  const { user, dmUsers, channels } = useContext(UserContext);\n\n  const handleMenu = () => {\n    setProfileMenuOpen(false);\n  };\n\n  useEffect(() => {\n    const handleDocumentClick = (e) => {\n      // Close profile menu if click is outside\n      if (\n        profileMenuRef.current &&\n        !profileMenuRef.current.contains(e.target)\n      ) {\n        setProfileMenuOpen(false);\n      }\n      // Close modal if click is outside\n      if (\n        isModalOpen &&\n        modalRef.current &&\n        !modalRef.current.contains(e.target)\n      ) {\n        setIsModalOpen(false);\n      }\n    };\n\n    // Add event listener when the component is mounted\n    document.addEventListener(\"mousedown\", handleDocumentClick);\n\n    // Cleanup the event listener when the component is unmounted\n    return () => {\n      document.removeEventListener(\"mousedown\", handleDocumentClick);\n    };\n  }, [isModalOpen]);\n\n  const handleProfileIconClick = () => {\n    setProfileMenuOpen(!isProfileMenuOpen);\n  };\n\n  const handleProfileClick = () => {\n    setIsModalOpen(true);\n    setProfileMenuOpen(false); // Close dropdown menu\n  };\n\n  return (\n    // TODO: Implement search bar\n    <header>\n      <nav className=\"nav_bg flex justify-between items-center w-full z-10 py-2 px-8 shadow-lg\">\n        <a href=\"/\">\n          {/* <img src={Logo} alt=\"logo\" width={35} height={25} /> */}\n        </a>\n        <div className=\"flex gap-6 px-4\">\n          <h1 className=\"text-sand text-2xl font-bold\">\n            {user ? user.username : \"Loading...\"}\n          </h1>\n          <div ref={profileMenuRef}>\n            {user && user.profile_image && (\n              <img\n                src={require(`../assets/${user.profile_image}`)}\n                alt=\"profile\"\n                width={35}\n                height={35}\n                onClick={handleProfileIconClick}\n                className=\"cursor-pointer rounded-full\"\n              />\n            )}\n            {isProfileMenuOpen && (\n              <div className=\"absolute top-16 right-6 bg-primaryBlue text-sand shadow-md p-2 border-2 border-sand rounded-md\">\n                <ul className=\"text-center\">\n                  <li\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\n                    onClick={handleProfileClick}\n                  >\n                    Profile\n                  </li>\n                  <li\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\n                    onClick={handleMenu}\n                  >\n                    Settings\n                  </li>\n                  <li\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\n                    onClick={handleMenu}\n                  >\n                    Logout\n                  </li>\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n      {isModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40 flex justify-center items-center \">\n          <div\n            ref={modalRef}\n            className=\"nav_bg p-4 rounded text-white \"\n            style={{ minHeight: \"50vh\", minWidth: \"80vw\" }}\n          >\n            <h2 className=\"text-amber-500 pb-10 text-center text-3xl\t\">\n              User Profile\n            </h2>\n            <div className=\"flex flex-wrap\">\n              <div className=\"flex flex-col items-center w-1/2 border-r\">\n                {/* Image Container */}\n                <div className=\"w-full flex justify-center p-10\">\n                  <div className=\"relative\">\n                    {user && user.profile_image && (\n                      <img\n                        src={require(`../assets/${user.profile_image}`)}\n                        alt=\"profile\"\n                        className=\"w-52 h-auto cursor-pointer rounded-full\"\n                      />\n                    )}\n                    {/* Upload Icon Overlay */}\n                    <input\n                      type=\"file\"\n                      id=\"profile-upload\"\n                      className=\"hidden\"\n                      // onChange={} // A function to handle the file upload\n                    />\n                    {/* Upload Icon Overlay */}\n                    <label\n                      htmlFor=\"profile-upload\"\n                      className=\"absolute bottom-2 right-3 bg-blue-300 text-white rounded-full \n                            flex items-center justify-center w-10 h-10 cursor-pointer\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        className=\"w-6 h-6\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M12 4v16m8-8H4\"\n                        />\n                      </svg>\n                    </label>\n                  </div>\n                </div>\n\n                {/* Information Container */}\n                <div className=\"w-full flex justify-between px-2 text-2xl pb-10\">\n                  <div className=\"flex-1 flex justify-center items-center border-r\">\n                    <div className=\"text-center\">\n                      <div className=\"font-semibold\">Following</div>\n                      <div>\n                        {user && Array.isArray(user.following)\n                          ? user.following.length\n                          : \"Loading...\"}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Followers Column */}\n                  <div className=\"flex-1 flex justify-center items-center\">\n                    <div className=\"text-center\">\n                      <div className=\"font-semibold\">Followers</div>\n                      <div>\n                        {user && Array.isArray(user.followers)\n                          ? user.followers.length\n                          : \"Loading...\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"w-1/2 pl-2 \">\n                <div className=\"p-10\">\n                  <div className=\"user-info-field flex flex-col mb-4\">\n                    <label className=\"mb-1 text-sm font-semibold\">Email</label>\n                    <input\n                      className=\"border-0 border-b-2 border-gray-300   text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\n                      type=\"text\"\n                      value={user ? user.email : \"Loading...\"}\n                      readOnly\n                    />\n                  </div>\n\n                  <div className=\"user-info-field flex flex-col mb-4\">\n                    <label className=\"mb-1 text-sm font-semibold\">\n                      Username\n                    </label>\n                    <input\n                      className=\"border-0 border-b-2 border-gray-300  text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\n                      type=\"text\"\n                      value={user ? user.username : \"Loading...\"}\n                      readOnly\n                    />\n                  </div>\n\n                  <div className=\"user-info-field flex flex-col mb-4\">\n                    <label className=\"mb-1 text-sm font-semibold\">\n                      Password\n                    </label>\n                    <input\n                      className=\"border-0 border-b-2 border-gray-300 text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\n                      type=\"password\"\n                      value={\"****************\"}\n                      readOnly\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default Nav;\n",["72"],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Sidebar.jsx",[],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Posts.jsx",["73","74","75"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport heartIcon from \"../assets/heart-regular.svg\";\nimport redHeart from \"../assets/redHeart.svg\";\n\nimport UserContext from './UserContext';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const { user, setUser } = useContext(UserContext);\n\n  const [clicked, setClicked] = useState([]);\n  const [formData, setFormData] = useState({\n    like_counts: \"\",\n  });\n  const { like_counts } = formData;\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleLikes = async (postId, index) => {\n    const dataToSend = { postId, userId: user.username };\n\n    try {\n      await fetch(\"/post-like\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(dataToSend),\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  function handleClick(postId, index) {\n    const updatedPosts = [...posts];\n    const post = updatedPosts[index];\n\n    if (post.likers.includes(user.username)) {\n      // If the post is already liked, unlike it\n      const likerIndex = post.likers.indexOf(user.username);\n      post.likers.splice(likerIndex, 1);\n      post.like_counter--;\n    } else {\n      // If the post is not yet liked, like it\n      post.likers.push(user.username);\n      post.like_counter++;\n    }\n\n    setPosts(updatedPosts);\n    handleLikes(postId, index); // This will now just update the like status in the backend\n  }\n\n  useEffect(() => {\n    const fetchPosts = () => {\n      fetch(\"/get-posts\")\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\n              \"Network response was not ok \" + response.statusText\n            );\n          }\n          return response.json();\n        })\n        .then((data) => {\n          setPosts(data.reverse());\n          console.log(data);\n          setClicked(new Array(data.length).fill(false));\n        })\n        .catch((error) => {\n          console.error(\n            \"There has been a problem with your fetch operation:\",\n            error\n          );\n          setError(error.toString());\n        });\n    };\n\n    fetchPosts();\n\n    const intervalId = setInterval(fetchPosts, 5000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const isFollowing = (username) => {\n    return user.following.includes(username);\n  };\n\n  // The function to handle the follow action\n  const handleFollow = async (usernameToFollow) => {\n    // Optimistically update the local state\n    const isNowFollowing = isFollowing(usernameToFollow);\n    const updatedFollowing = isNowFollowing\n      ? user.following.filter(username => username !== usernameToFollow) // Remove the user from the following array\n      : [...user.following, usernameToFollow]; // Add the user to the following array\n  \n    setUser({\n      ...user,\n      following: updatedFollowing\n    });\n  \n    try {\n      // Perform the backend update\n      const response = await fetch(\"/follow-user\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          followers: user.username,\n          following: usernameToFollow,\n        }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n  \n      // No need to update the state here, as we've already done it optimistically\n  \n    } catch (error) {\n      // If the backend update fails, revert the state change\n      console.error(\"There has been a problem with your follow operation:\", error);\n      setUser(prevUser => ({\n        ...prevUser,\n        // Revert to the previous following list\n        following: isNowFollowing ? [...prevUser.following, usernameToFollow] : prevUser.following.filter(username => username !== usernameToFollow),\n      }));\n    }\n  };\n\n  return (\n    <div className=\"justify-center\">\n      {error ? (\n        <p className=\"text-red-500 text-xl\">Error: {error}</p>\n      ) : posts.length === 0 ? (\n        <div className=\"flex justify-center items-center\">\n          <p className=\"text-sand text-4xl text-center\">No posts available!</p>\n        </div>\n      ) : (\n        posts.map((post, index) => (\n          <div\n            key={index}\n            className=\"max-w-5xl mx-auto my-1 p-3 bg-post rounded-xl text-white\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                {user && user.profile_image && (\n                  <img\n                    src={require(`../assets/${user.profile_image}`)}\n                    alt=\"profile\"\n                    className=\"w-10 h-10 rounded-full\"\n                  />\n                )}\n                <h2 className=\"text-xl\">{post.username}</h2>\n              </div>\n              {/* If post is yourself show Follow or following*/}\n              {user && user.username !== post.username && (\n                <button\n                  onClick={() => handleFollow(post.username)}\n                  className=\"text-blue-300 text-md px-3 cursor-pointer hover:scale-110\"\n                >\n                  {isFollowing(post.username) ? \"Following\" : \"Follow\"}\n                </button>\n              )}\n            </div>\n\n            <hr className=\"my-4\" />\n            <h1 className=\"text-2xl text-sand font-bold\">{post.title}</h1>\n            <hr className=\"my-4\" />\n            {post.description && (\n              <div>\n                <p className=\"text-sand\">{post.description}</p>\n                <hr className=\"my-2\" />\n              </div>\n            )}\n\n            <div className=\"mt-2 w-5 h-5 flex items-center space-x-2\">\n              {user && post.likers.includes(user.username) ? (\n                <img\n                  src={redHeart}\n                  onClick={() => handleClick(post._id, index)}\n                  alt=\"Liked\"\n                  className=\"hover:scale-110\"\n                />\n              ) : (\n                <img\n                  src={heartIcon}\n                  onClick={() => handleClick(post._id, index)}\n                  alt=\"Like\"\n                  className=\"hover:scale-110\"\n                />\n              )}\n              <span className=\"text-white\">{post.like_counter}</span>{\" \"}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/SidebarMsg.jsx",[],[],{"ruleId":"76","severity":1,"message":"77","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":15},{"ruleId":"76","severity":1,"message":"80","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":12},{"ruleId":"76","severity":1,"message":"81","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":18},{"ruleId":"76","severity":1,"message":"82","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"83","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"84","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":16},{"ruleId":"76","severity":1,"message":"81","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":18},{"ruleId":"76","severity":1,"message":"85","line":9,"column":7,"nodeType":"78","messageId":"79","endLine":9,"endColumn":14},{"ruleId":"76","severity":1,"message":"86","line":16,"column":11,"nodeType":"78","messageId":"79","endLine":16,"endColumn":15},{"ruleId":"76","severity":1,"message":"87","line":16,"column":17,"nodeType":"78","messageId":"79","endLine":16,"endColumn":24},{"ruleId":"76","severity":1,"message":"88","line":16,"column":26,"nodeType":"78","messageId":"79","endLine":16,"endColumn":34},{"ruleId":"89","severity":1,"message":"90","line":104,"column":1,"nodeType":"91","messageId":"92","endLine":168,"endColumn":2},{"ruleId":"76","severity":1,"message":"93","line":7,"column":10,"nodeType":"78","messageId":"79","endLine":7,"endColumn":19},{"ruleId":"76","severity":1,"message":"94","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":12},{"ruleId":"76","severity":1,"message":"87","line":15,"column":17,"nodeType":"78","messageId":"79","endLine":15,"endColumn":24},{"ruleId":"76","severity":1,"message":"88","line":15,"column":26,"nodeType":"78","messageId":"79","endLine":15,"endColumn":34},{"ruleId":"95","replacedBy":"96"},{"ruleId":"76","severity":1,"message":"97","line":12,"column":10,"nodeType":"78","messageId":"79","endLine":12,"endColumn":17},{"ruleId":"76","severity":1,"message":"98","line":16,"column":11,"nodeType":"78","messageId":"79","endLine":16,"endColumn":22},{"ruleId":"76","severity":1,"message":"99","line":17,"column":9,"nodeType":"78","messageId":"79","endLine":17,"endColumn":21},"no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'SidebarMsg' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'IoSend' is defined but never used.","'members' is assigned a value but never used.","'user' is assigned a value but never used.","'dmUsers' is assigned a value but never used.","'channels' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'isFocused' is assigned a value but never used.","'Logo' is defined but never used.","no-new-object",["100"],"'clicked' is assigned a value but never used.","'like_counts' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-object-constructor"]