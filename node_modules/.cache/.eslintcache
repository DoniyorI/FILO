[{"C:\\Users\\zodin\\CSE312\\FILO\\src\\index.js":"1","C:\\Users\\zodin\\CSE312\\FILO\\src\\App.jsx":"2","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\UserContext.js":"3","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Register.jsx":"4","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Sidebar.jsx":"5","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Messages.jsx":"6","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Nav.jsx":"7","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Home.jsx":"8","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Posts.jsx":"9"},{"size":509,"mtime":1699482341830,"results":"10","hashOfConfig":"11"},{"size":1341,"mtime":1699482341804,"results":"12","hashOfConfig":"11"},{"size":994,"mtime":1699482341827,"results":"13","hashOfConfig":"11"},{"size":7653,"mtime":1699482341825,"results":"14","hashOfConfig":"11"},{"size":11601,"mtime":1699482341827,"results":"15","hashOfConfig":"11"},{"size":1691,"mtime":1699482341822,"results":"16","hashOfConfig":"11"},{"size":8706,"mtime":1699482341823,"results":"17","hashOfConfig":"11"},{"size":5796,"mtime":1699503601348,"results":"18","hashOfConfig":"11"},{"size":7060,"mtime":1699508888861,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uvlnsa",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\zodin\\CSE312\\FILO\\src\\index.js",[],[],"C:\\Users\\zodin\\CSE312\\FILO\\src\\App.jsx",[],[],"C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\UserContext.js",[],[],"C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Register.jsx",[],[],"C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Sidebar.jsx",[],[],"C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Messages.jsx",["50","51","52","53","54"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport SendIcon from \"../assets/sendIcon.svg\";\r\n\r\nimport UserContext from \"./UserContext\";\r\n\r\nfunction Messages() {\r\n  const { user, dmUsers, channels } = useContext(UserContext);\r\n\r\n  // how do I get the data from the user (_id) database? useEffect?\r\n\r\n  // TODO: Make Messaging page Like the Figma, Should fetch the messages and information from the backend\r\n  // For DMS use /get-dm and send the DM ID  will give oyu all the User Info\r\n  // MORE IMPORTANT LO2: For Channels should use /get-Channel  Send the Channel ID they clicked to backend.\r\n  // using webSockets should countdown\r\n  return (\r\n    <div className=\"home_bg min-h-screen ml-16\">\r\n      {/* 1) the code below is for displaying the chat's icon and chat name */}\r\n      <div className=\"flex items-center pt-2 pl-6 pb-2 border-b-[1px]\">\r\n        <div className=\"h-11 w-11 rounded-full bg-white mr-1\"></div>\r\n        <div className=\"mx-4 font-semibold text-goldenOrange text-xl\">\r\n          Username\r\n        </div>\r\n      </div>\r\n      <div className=\"fixed bottom-0 pb-6 w-full\" style={{ left: '2rem', right: '1rem' }}> \r\n    <form className=\"flex bg-white h-8 rounded-2xl justify-center items-center mx-auto\" style={{ maxWidth: 'calc(100% - 10rem)' }}>\r\n      <input className=\"ml-5 flex-grow border-none rounded-l-2xl px-4\" placeholder=\"Type a message...\"></input>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-blue hover:scale-150 text-white font-semibold mx-4 rounded-r-2xl\"\r\n      >\r\n        <img src={SendIcon} alt=\"send\" width={20} height={20} />\r\n      </button>\r\n    </form>\r\n  </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Nav.jsx",["55","56","57"],[],"import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport Logo from \"../assets/FILO_Logo.png\";\r\n\r\nimport UserContext from './UserContext';\r\n\r\n\r\nconst Nav = () => {\r\n  // const [user, setUser] = useState(null);\r\n  const [isProfileMenuOpen, setProfileMenuOpen] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const profileMenuRef = useRef(null);\r\n  const modalRef = useRef(null);\r\n\r\n  const { user, dmUsers, channels } = useContext(UserContext);\r\n\r\n  const handleMenu = () => {\r\n    setProfileMenuOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleDocumentClick = (e) => {\r\n      // Close profile menu if click is outside\r\n      if (\r\n        profileMenuRef.current &&\r\n        !profileMenuRef.current.contains(e.target)\r\n      ) {\r\n        setProfileMenuOpen(false);\r\n      }\r\n      // Close modal if click is outside\r\n      if (\r\n        isModalOpen &&\r\n        modalRef.current &&\r\n        !modalRef.current.contains(e.target)\r\n      ) {\r\n        setIsModalOpen(false);\r\n      }\r\n    };\r\n\r\n    // Add event listener when the component is mounted\r\n    document.addEventListener(\"mousedown\", handleDocumentClick);\r\n\r\n    // Cleanup the event listener when the component is unmounted\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleDocumentClick);\r\n    };\r\n  }, [isModalOpen]);\r\n\r\n  const handleProfileIconClick = () => {\r\n    setProfileMenuOpen(!isProfileMenuOpen);\r\n  };\r\n\r\n  const handleProfileClick = () => {\r\n    setIsModalOpen(true);\r\n    setProfileMenuOpen(false); // Close dropdown menu\r\n  };\r\n\r\n  return (\r\n    // TODO: Implement search bar\r\n    <header>\r\n      <nav className=\"nav_bg flex justify-between items-center w-full z-10 py-2 px-8 shadow-lg\">\r\n        <a href=\"/\">\r\n          {/* <img src={Logo} alt=\"logo\" width={35} height={25} /> */}\r\n        </a>\r\n        <div className=\"flex gap-6 px-4\">\r\n          <h1 className=\"text-sand text-2xl font-bold\">\r\n            {user ? user.username : \"Loading...\"}\r\n          </h1>\r\n          <div ref={profileMenuRef}>\r\n            {user && user.profile_image && (\r\n              <img\r\n                src={require(`../assets/${user.profile_image}`)}\r\n                alt=\"profile\"\r\n                width={35}\r\n                height={35}\r\n                onClick={handleProfileIconClick}\r\n                className=\"cursor-pointer rounded-full\"\r\n              />\r\n            )}\r\n            {isProfileMenuOpen && (\r\n              <div className=\"absolute top-16 right-6 bg-primaryBlue text-sand shadow-md p-2 border-2 border-sand rounded-md\">\r\n                <ul className=\"text-center\">\r\n                  <li\r\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\r\n                    onClick={handleProfileClick}\r\n                  >\r\n                    Profile\r\n                  </li>\r\n                  <li\r\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\r\n                    onClick={handleMenu}\r\n                  >\r\n                    Settings\r\n                  </li>\r\n                  <li\r\n                    className=\"hover:scale-110 hover:underline cursor-pointer\"\r\n                    onClick={handleMenu}\r\n                  >\r\n                    Logout\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40 flex justify-center items-center \">\r\n          <div\r\n            ref={modalRef}\r\n            className=\"nav_bg p-4 rounded text-white \"\r\n            style={{ minHeight: \"50vh\", minWidth: \"80vw\" }}\r\n          >\r\n            <h2 className=\"text-amber-500 pb-10 text-center text-3xl\t\">\r\n              User Profile\r\n            </h2>\r\n            <div className=\"flex flex-wrap\">\r\n              <div className=\"flex flex-col items-center w-1/2 border-r\">\r\n                {/* Image Container */}\r\n                <div className=\"w-full flex justify-center p-10\">\r\n                  <div className=\"relative\">\r\n                    {user && user.profile_image && (\r\n                      <img\r\n                        src={require(`../assets/${user.profile_image}`)}\r\n                        alt=\"profile\"\r\n                        className=\"w-52 h-auto cursor-pointer rounded-full\"\r\n                      />\r\n                    )}\r\n                    {/* Upload Icon Overlay */}\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"profile-upload\"\r\n                      className=\"hidden\"\r\n                      // onChange={} // A function to handle the file upload\r\n                    />\r\n                    {/* Upload Icon Overlay */}\r\n                    <label\r\n                      htmlFor=\"profile-upload\"\r\n                      className=\"absolute bottom-2 right-3 bg-blue-300 text-white rounded-full \r\n                            flex items-center justify-center w-10 h-10 cursor-pointer\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                        className=\"w-6 h-6\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M12 4v16m8-8H4\"\r\n                        />\r\n                      </svg>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Information Container */}\r\n                <div className=\"w-full flex justify-between px-2 text-2xl pb-10\">\r\n                  <div className=\"flex-1 flex justify-center items-center border-r\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"font-semibold\">Following</div>\r\n                      <div>\r\n                        {user && Array.isArray(user.following)\r\n                          ? user.following.length\r\n                          : \"Loading...\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Followers Column */}\r\n                  <div className=\"flex-1 flex justify-center items-center\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"font-semibold\">Followers</div>\r\n                      <div>\r\n                        {user && Array.isArray(user.followers)\r\n                          ? user.followers.length\r\n                          : \"Loading...\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"w-1/2 pl-2 \">\r\n                <div className=\"p-10\">\r\n                  <div className=\"user-info-field flex flex-col mb-4\">\r\n                    <label className=\"mb-1 text-sm font-semibold\">Email</label>\r\n                    <input\r\n                      className=\"border-0 border-b-2 border-gray-300   text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\r\n                      type=\"text\"\r\n                      value={user ? user.email : \"Loading...\"}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"user-info-field flex flex-col mb-4\">\r\n                    <label className=\"mb-1 text-sm font-semibold\">\r\n                      Username\r\n                    </label>\r\n                    <input\r\n                      className=\"border-0 border-b-2 border-gray-300  text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\r\n                      type=\"text\"\r\n                      value={user ? user.username : \"Loading...\"}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"user-info-field flex flex-col mb-4\">\r\n                    <label className=\"mb-1 text-sm font-semibold\">\r\n                      Password\r\n                    </label>\r\n                    <input\r\n                      className=\"border-0 border-b-2 border-gray-300 text-gray-600 bg-transparent focus:outline-none focus:ring-0\"\r\n                      type=\"password\"\r\n                      value={\"****************\"}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Home.jsx",["58"],[],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport Posts from \"./Posts\";\r\nimport SendIcon from \"../assets/sendIcon.svg\";\r\nimport { LuImagePlus } from \"react-icons/lu\";\r\nimport { MdCancel } from \"react-icons/md\"; \r\n\r\n\r\nconst Home = () => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const [imageBase64, setImageBase64] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    new_title: \"\",\r\n    new_description: \"\",\r\n  });\r\n  const formRef = useRef();\r\n  const removeImage = () => {\r\n    setImageBase64('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (formRef.current && !formRef.current.contains(event.target)) {\r\n        setShowDescription(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [formRef]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setImageBase64(e.target.result);\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleNewPost = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const dataToSend = {\r\n      title: formData.new_title,\r\n      description: formData.new_description,\r\n      image: imageBase64, // add the image base64 to the data to send\r\n    };\r\n\r\n    try {\r\n      console.log(\"dataToSend: \", dataToSend);\r\n      const response = await fetch(\"/posts-upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n\r\n      if (response.ok) {\r\n        window.location.href = \"/\";\r\n      } else {\r\n        // handle error\r\n      }\r\n    } catch (error) {\r\n      window.location.href = \"/\";\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n  // TODO: Update Posts to load images look at the way profile images are uploaded should be similar\r\n\r\n  return (\r\n    <div className=\"home_bg min-h-screen h-full ml-16\">\r\n      <div className=\"flex justify-center items-center text-3xl text-white pt-2\">\r\n        <a\r\n          href=\"/\"\r\n          className=\"px-4 text-base hover:underline underline-offset-8\"\r\n        >\r\n          Home\r\n        </a>\r\n        |\r\n        <a\r\n          href=\"/\"\r\n          className=\"px-4 text-base hover:underline underline-offset-8\"\r\n        >\r\n          Following\r\n        </a>\r\n      </div>\r\n\r\n      <div\r\n        className=\"max-w-5xl mx-auto p-4 my-8 bg-primaryDark shadow-md rounded-md text-sand\"\r\n        ref={formRef}\r\n      >\r\n        <h1 className=\"text-base font-semibold mb-2 text-center\">New Post</h1>\r\n        <form onSubmit={handleNewPost}>\r\n          <input\r\n            name=\"new_title\"\r\n            className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full\"\r\n            placeholder=\"What's On Your Mind?\"\r\n            value={formData.new_title}\r\n            onFocus={() => {\r\n              setIsFocused(true);\r\n              setShowDescription(true);\r\n            }}\r\n            onBlur={() => setIsFocused(false)}\r\n            onChange={handleInputChange}\r\n          />\r\n          <hr />\r\n          {showDescription && (\r\n            <div className=\"mt-2\">\r\n              <textarea\r\n                name=\"new_description\"\r\n                className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full h-20 resize-none overflow-auto\"\r\n                placeholder=\"Description\"\r\n                value={formData.new_description}\r\n                onFocus={() => {\r\n                  setIsFocused(true);\r\n                  setShowDescription(true);\r\n                }}\r\n                onChange={handleInputChange}\r\n              />\r\n              <hr className=\"p-2\" />\r\n\r\n              <div className=\"flex justify-end items-center\">\r\n              <label className=\"cursor-pointer\">\r\n              <LuImagePlus \r\n                className=\"w-7 h-7 inline-block text-white mr-2 hover:scale-125\"\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                className=\"hidden\"\r\n                onChange={handleImageChange}\r\n                accept=\"image/*\"\r\n              />\r\n            </label>\r\n            {imageBase64 && (\r\n              <div className=\"relative w-full flex justify-center\">\r\n              <div className=\"relative\" style={{ height: '100px' }}>\r\n                {/* The image itself */}\r\n                <img src={imageBase64} alt=\"Preview\" style={{ height: '100px' }} className=\"object-contain\" />\r\n                {/* The button to remove the image */}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"absolute top-0 right-0 bg-red-500 text-white rounded-full p-1\"\r\n                  onClick={removeImage}\r\n                  style={{ transform: 'translate(50%, -50%)' }} // Adjust position to be on the edge\r\n                >\r\n                  <MdCancel />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            )}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-none hover:scale-125 text-white font-semibold mx-4 rounded-md justify-between\"\r\n            >\r\n              <img src={SendIcon} alt=\"send\" width={20} height={20} />\r\n            </button>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n\r\n      <Posts />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\zodin\\CSE312\\FILO\\src\\components\\Posts.jsx",["59","60","61"],[],{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"67","line":7,"column":11,"nodeType":"64","messageId":"65","endLine":7,"endColumn":15},{"ruleId":"62","severity":1,"message":"68","line":7,"column":17,"nodeType":"64","messageId":"65","endLine":7,"endColumn":24},{"ruleId":"62","severity":1,"message":"69","line":7,"column":26,"nodeType":"64","messageId":"65","endLine":7,"endColumn":34},{"ruleId":"62","severity":1,"message":"70","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":12},{"ruleId":"62","severity":1,"message":"68","line":15,"column":17,"nodeType":"64","messageId":"65","endLine":15,"endColumn":24},{"ruleId":"62","severity":1,"message":"69","line":15,"column":26,"nodeType":"64","messageId":"65","endLine":15,"endColumn":34},{"ruleId":"62","severity":1,"message":"71","line":9,"column":10,"nodeType":"64","messageId":"65","endLine":9,"endColumn":19},{"ruleId":"62","severity":1,"message":"72","line":12,"column":10,"nodeType":"64","messageId":"65","endLine":12,"endColumn":17},{"ruleId":"62","severity":1,"message":"73","line":16,"column":11,"nodeType":"64","messageId":"65","endLine":16,"endColumn":22},{"ruleId":"62","severity":1,"message":"74","line":17,"column":9,"nodeType":"64","messageId":"65","endLine":17,"endColumn":21},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'dmUsers' is assigned a value but never used.","'channels' is assigned a value but never used.","'Logo' is defined but never used.","'isFocused' is assigned a value but never used.","'clicked' is assigned a value but never used.","'like_counts' is assigned a value but never used.","'handleChange' is assigned a value but never used."]