[{"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/index.js":"1","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/App.jsx":"2","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Sidebar.jsx":"3","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Nav.jsx":"4","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Register.jsx":"5","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Home.jsx":"6","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Posts.jsx":"7","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Loading.jsx":"8"},{"size":488,"mtime":1697918576131,"results":"9","hashOfConfig":"10"},{"size":1085,"mtime":1698120873161,"results":"11","hashOfConfig":"10"},{"size":836,"mtime":1698089055758,"results":"12","hashOfConfig":"10"},{"size":3002,"mtime":1698116933955,"results":"13","hashOfConfig":"10"},{"size":7391,"mtime":1698088711718,"results":"14","hashOfConfig":"10"},{"size":3829,"mtime":1698089692875,"results":"15","hashOfConfig":"10"},{"size":4894,"mtime":1698119550510,"results":"16","hashOfConfig":"10"},{"size":570,"mtime":1698119094564,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"4zm8qb",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/index.js",[],[],["45"],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/App.jsx",["46"],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Sidebar.jsx",[],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Nav.jsx",[],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Register.jsx",[],[],"/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Home.jsx",["47"],[],"import React, { useRef, useEffect, useState } from \"react\";\nimport Posts from \"./Posts\";\nimport SendIcon from \"../assets/sendIcon.svg\";\n\nconst Home = () => {\n  const [isFocused, setIsFocused] = useState(false);\n  const [showDescription, setShowDescription] = useState(false);\n  const [formData, setFormData] = useState({\n    new_title: \"\",\n    new_description: \"\",\n  });\n  const formRef = useRef();\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (formRef.current && !formRef.current.contains(event.target)) {\n        setShowDescription(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [formRef]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleNewPost = async (event) => {\n    event.preventDefault();\n\n    const dataToSend = {\n      title: formData.new_title,\n      description: formData.new_description,\n    };\n\n    try {\n      console.log(\"dataToSend: \");\n      console.log(dataToSend);\n      const response = await fetch(\"/posts-upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(dataToSend),\n      });\n\n      if (response.ok) {\n        window.location.href = \"/\";\n      } else {\n        // handle error\n      }\n    } catch (error) {\n      window.location.href = \"/\";\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <div className=\"home_bg min-h-screen h-full ml-20\">\n      <div className=\"flex justify-center items-center text-3xl text-white pt-2\">\n        <a\n          href=\"/\"\n          className=\"px-4 text-base hover:underline underline-offset-8\"\n        >\n          Home\n        </a>\n        |\n        <a\n          href=\"/\"\n          className=\"px-4 text-base hover:underline underline-offset-8\"\n        >\n          Following\n        </a>\n      </div>\n\n      <div\n        className=\"max-w-5xl mx-auto p-4 my-8 bg-primaryDark shadow-md rounded-md text-sand\"\n        ref={formRef}\n      >\n        <h1 className=\"text-base font-semibold mb-2 text-center\">New Post</h1>\n        <form onSubmit={handleNewPost}>\n          <input\n            name=\"new_title\"\n            className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full\"\n            placeholder=\"What's On Your Mind?\"\n            value={formData.new_title}\n            onFocus={() => {\n              setIsFocused(true);\n              setShowDescription(true);\n            }}\n            onBlur={() => setIsFocused(false)}\n            onChange={handleInputChange}\n          />\n          <hr />\n          {showDescription && (\n            <div className=\"mt-2\">\n              <textarea\n                name=\"new_description\"\n                className=\"bg-transparent border-none appearance-none leading-tight focus:outline-none w-full h-20 resize-none overflow-auto\"\n                placeholder=\"Description\"\n                value={formData.new_description}\n                onFocus={() => {\n                  setIsFocused(true);\n                  setShowDescription(true);\n                }}\n                onChange={handleInputChange}\n              />\n              <hr className=\"p-2\" />\n\n              <div className=\"flex justify-end\">\n                <button\n                  type=\"submit\"\n                  className=\"bg-none hover:scale-150 text-white font-semibold px-4 py-2 rounded-md\"\n                >\n                  <img src={SendIcon} alt=\"send\" width={20} height={20} />\n                </button>\n              </div>\n            </div>\n          )}\n        </form>\n      </div>\n\n      <Posts />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Posts.jsx",["48","49","50"],[],"import React, { useState, useEffect } from \"react\";\nimport Profile from \"../assets/mainProfile.svg\";\nimport heartIcon from \"../assets/heart-regular.svg\";\nimport redHeart from \"../assets/redHeart.svg\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n\n  const [userName, setUserName] = useState(null); // Added this state to hold the user's name\n\n  useEffect(() => {\n    // Fetch user when component mounts\n    fetch(\"/get-user\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok \" + response.statusText);\n        }\n        return response.json();\n      })\n      .then((user) => {\n        setUserName(user); // Assuming the username is stored in the 'username' property\n      })\n      .catch((error) => {\n        console.error(\n          \"There has been a problem with your fetch operation:\",\n          error\n        );\n      });\n  }, []);\n\n  const [clicked, setClicked] = useState([]);\n  const [formData, setFormData] = useState({\n    like_counts: \"\",\n  });\n  const { like_counts } = formData;\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleLikes = async (postId, index) => {\n    const dataToSend = { postId, userId: userName };\n\n    try {\n      await fetch(\"/post-like\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(dataToSend),\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  function handleClick(postId, index) {\n    const updatedPosts = [...posts];\n    const post = updatedPosts[index];\n\n    if (post.likers.includes(userName)) {\n      // If the post is already liked, unlike it\n      const likerIndex = post.likers.indexOf(userName);\n      post.likers.splice(likerIndex, 1);\n      post.like_counter--;\n    } else {\n      // If the post is not yet liked, like it\n      post.likers.push(userName);\n      post.like_counter++;\n    }\n\n    setPosts(updatedPosts);\n    handleLikes(postId, index); // This will now just update the like status in the backend\n  }\n\n  useEffect(() => {\n    const fetchPosts = () => {\n      fetch(\"/get-posts\")\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\n              \"Network response was not ok \" + response.statusText\n            );\n          }\n          return response.json();\n        })\n        .then((data) => {\n          setPosts(data.reverse());\n          setClicked(new Array(data.length).fill(false));\n        })\n        .catch((error) => {\n          console.error(\n            \"There has been a problem with your fetch operation:\",\n            error\n          );\n          setError(error.toString());\n        });\n    };\n\n    fetchPosts();\n\n    const intervalId = setInterval(fetchPosts, 5000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div className=\"justify-center\">\n      {error ? (\n        <p className=\"text-red-500 text-xl\">Error: {error}</p>\n      ) : posts.length === 0 ? (\n        <div className=\"flex justify-center items-center\">\n          <p className=\"flex text-sand text-4xl text-center\">\n            No posts available!\n          </p>\n        </div>\n      ) : (\n        posts.map((post, index) => (\n          <div\n            key={index}\n            className=\"max-w-5xl mx-auto my-1 p-3 bg-post rounded-xl text-white\"\n          >\n            <div className=\"flex items-center space-x-4\" id={post._id}>\n              <img\n                src={Profile}\n                alt=\"Profile\"\n                className=\"w-10 h-10 rounded-full\"\n              />\n              <h2>{post.username}</h2>\n            </div>\n            <hr className=\"my-4\" />\n            <h1 className=\"text-2xl text-sand font-bold\">{post.title}</h1>\n            <hr className=\"my-4\" />\n            {post.description && (\n              <div>\n                <p className=\"text-sand\">{post.description}</p>\n                <hr className=\"my-2\" />\n              </div>\n            )}\n\n            <div className=\"mt-2 w-5 h-5 flex items-center space-x-2\">\n              {post.likers.includes(userName) ? (\n                <img\n                  src={redHeart}\n                  onClick={() => handleClick(post._id, index)}\n                  alt=\"Liked\"\n                  className=\"hover:scale-110\"\n                />\n              ) : (\n                <img\n                  src={heartIcon}\n                  onClick={() => handleClick(post._id, index)}\n                  alt=\"Like\"\n                  className=\"hover:scale-110\"\n                />\n              )}\n              <span className=\"text-white\">{post.like_counter}</span>{\" \"}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n","/Users/jimmywu/Downloads/Classes/FALL2023/CSE312/Projects/FILO/src/components/Loading.jsx",[],[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":40,"nodeType":"55","messageId":"56","endLine":1,"endColumn":46},{"ruleId":"53","severity":1,"message":"57","line":6,"column":10,"nodeType":"55","messageId":"56","endLine":6,"endColumn":19},{"ruleId":"53","severity":1,"message":"58","line":32,"column":10,"nodeType":"55","messageId":"56","endLine":32,"endColumn":17},{"ruleId":"53","severity":1,"message":"59","line":36,"column":11,"nodeType":"55","messageId":"56","endLine":36,"endColumn":22},{"ruleId":"53","severity":1,"message":"60","line":37,"column":9,"nodeType":"55","messageId":"56","endLine":37,"endColumn":21},"no-new-object",["61"],"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'isFocused' is assigned a value but never used.","'clicked' is assigned a value but never used.","'like_counts' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-object-constructor"]